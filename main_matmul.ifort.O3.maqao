*******************************************************
                  Processing loop 46
*******************************************************
Function: run_
Source file: /home/scemama/SO_matmul/main_matmul.f90
Source line: 41-41
Address in the binary: 40814f

*******************************************************
                     Assembly code
*******************************************************
VMOVUPD	0(%R15,%R12,8),%XMM1
VMOVUPD	0x20(%R15,%R12,8),%XMM5
VMOVUPD	0x40(%R15,%R12,8),%XMM9
VMOVUPD	0x60(%R15,%R12,8),%XMM13
VINSERTF128	$0x1,0x30(%R15,%R12,8),%YMM5,%YMM6
VINSERTF128	$0x1,0x10(%R15,%R12,8),%YMM1,%YMM2
VINSERTF128	$0x1,0x50(%R15,%R12,8),%YMM9,%YMM10
VINSERTF128	$0x1,0x70(%R15,%R12,8),%YMM13,%YMM14
VMULPD	%YMM2,%YMM0,%YMM3
VMULPD	%YMM6,%YMM0,%YMM7
VMULPD	%YMM10,%YMM0,%YMM11
VMULPD	%YMM14,%YMM0,%YMM15
VADDPD	0(%R14,%R12,8),%YMM3,%YMM4
VADDPD	0x20(%R14,%R12,8),%YMM7,%YMM8
VADDPD	0x40(%R14,%R12,8),%YMM11,%YMM12
VADDPD	0x60(%R14,%R12,8),%YMM15,%YMM1
VMOVUPD	%YMM4,0(%R14,%R12,8)
VMOVUPD	%YMM8,0x20(%R14,%R12,8)
VMOVUPD	%YMM12,0x40(%R14,%R12,8)
VMOVUPD	%YMM1,0x60(%R14,%R12,8)
ADD	$0x10,%R12
CMP	%R13,%R12
JB	40814f

*******************************************************
                General loop properties
*******************************************************
nb instructions		: 23
nb uops			: 27
loop length		: 144
used xmm registers	: 4
used ymm registers	: 16

Pattern: PD-XMM,PD-YMM
nb instructions:
PD-XMM	4
PD-YMM	12

nb FP arithmetical operations:
add-sub	16
mul	16

Ratio ADD-SUB/MUL (instructions): 1.00
Bytes loaded: 256
Bytes stored: 128
Arith. intensity (FLOP / ld+st bytes): 0.08

Unroll factor: 1

FIT IN UOP CACHE

*******************************************************
                       Dispatch
*******************************************************
	P0	P1	P2	P3	P4	P5
uops	5.00	5.00	8.00	8.00	4.00	5.00	
cycles	5.00	5.00	8.00	8.00	8.00	5.00	

*******************************************************
                 Vectorization ratios
*******************************************************
all	: 80%
load	: 66%
store	: 100%
mul	: 100%
add_sub	: 100%
other	: 0%

*******************************************************
                   If all data in L1
*******************************************************
cycles: 8.00
FP operations per cycle: 4.00 (GFLOPS at 1 GHz)
instructions per cycle: 2.88
bytes loaded per cycle: 32.00 (GB/s at 1 GHz)
bytes stored per cycle: 16.00 (GB/s at 1 GHz)
bytes loaded or stored per cycle: 48.00 (GB/s at 1 GHz)
Cycles if fully vectorized: 8.00
Cycles executing div or sqrt instructions: NA
*******************************************************
                          End
*******************************************************



*******************************************************
                  Processing loop 51
*******************************************************
Function: run_
Source file: /home/scemama/SO_matmul/main_matmul.f90
Source line: 41-41
Address in the binary: 407d5b

*******************************************************
                     Assembly code
*******************************************************
VMOVUPD	0(%R11,%RDI,8),%YMM0
ADD	$0x4,%RDI
VMOVUPD	0(%R14),%XMM5
VMULPD	%YMM0,%YMM4,%YMM7
VMULPD	%YMM3,%YMM0,%YMM11
VMULPD	%YMM2,%YMM0,%YMM15
VMULPD	%YMM1,%YMM0,%YMM0
VINSERTF128	$0x1,0x10(%R14),%YMM5,%YMM6
VADDPD	%YMM7,%YMM6,%YMM8
VEXTRACTF128	$0x1,%YMM8,0x10(%R14)
VMOVUPD	%XMM8,0(%R14)
VMOVUPD	0(%R13),%XMM9
ADD	$0x20,%R14
VINSERTF128	$0x1,0x10(%R13),%YMM9,%YMM10
VADDPD	%YMM11,%YMM10,%YMM12
VEXTRACTF128	$0x1,%YMM12,0x10(%R13)
VMOVUPD	%XMM12,0(%R13)
VMOVUPD	0(%R12),%XMM13
ADD	$0x20,%R13
VINSERTF128	$0x1,0x10(%R12),%YMM13,%YMM14
VADDPD	%YMM15,%YMM14,%YMM5
VEXTRACTF128	$0x1,%YMM5,0x10(%R12)
VMOVUPD	%XMM5,0(%R12)
VMOVUPD	0(%R15),%XMM6
ADD	$0x20,%R12
VINSERTF128	$0x1,0x10(%R15),%YMM6,%YMM7
VADDPD	%YMM0,%YMM7,%YMM8
VMOVUPD	%XMM8,0(%R15)
VEXTRACTF128	$0x1,%YMM8,0x10(%R15)
ADD	$0x20,%R15
CMP	%R10,%RDI
JB	407d5b

*******************************************************
                General loop properties
*******************************************************
nb instructions		: 32
nb uops			: 40
loop length		: 171
used xmm registers	: 6
used ymm registers	: 16

Pattern: PD-YMM,PD-XMM
nb instructions:
PD-XMM	8
PD-YMM	9

nb FP arithmetical operations:
add-sub	16
mul	16

Ratio ADD-SUB/MUL (instructions): 1.00
Bytes loaded: 160
Bytes stored: 128
Arith. intensity (FLOP / ld+st bytes): 0.11

Unroll factor: 1

FIT IN UOP CACHE

*******************************************************
                       Dispatch
*******************************************************
	P0	P1	P2	P3	P4	P5
uops	6.33	6.33	8.50	8.50	8.00	6.33	
cycles	6.33	6.33	8.50	8.50	8.00	6.33	

*******************************************************
                 Vectorization ratios
*******************************************************
all	: 68%
load	: 55%
store	: 50%
mul	: 100%
add_sub	: 100%
other	: 0%

*******************************************************
                   If all data in L1
*******************************************************
cycles: 8.50
FP operations per cycle: 3.76 (GFLOPS at 1 GHz)
instructions per cycle: 3.76
bytes loaded per cycle: 18.82 (GB/s at 1 GHz)
bytes stored per cycle: 15.06 (GB/s at 1 GHz)
bytes loaded or stored per cycle: 33.88 (GB/s at 1 GHz)
Cycles if fully vectorized: 8.50
Cycles executing div or sqrt instructions: NA
*******************************************************
                          End
*******************************************************

*******************************************************
                  Processing loop 55
*******************************************************
Function: run_
Source file: /home/scemama/SO_matmul/main_matmul.f90
Source line: 41-41
Address in the binary: 4077ab

*******************************************************
                     Assembly code
*******************************************************
VMOVUPD	0(%RSI,%RDI,8),%XMM12
VMOVUPD	0(%R14),%XMM10
VINSERTF128	$0x1,0x10(%RSI,%RDI,8),%YMM12,%YMM1
VMULPD	%YMM1,%YMM15,%YMM11
VINSERTF128	$0x1,0x10(%R14),%YMM10,%YMM7
VADDPD	%YMM11,%YMM7,%YMM6
VMOVUPD	0(%R13),%XMM10
VMULPD	%YMM0,%YMM1,%YMM11
VINSERTF128	$0x1,0x10(%R13),%YMM10,%YMM7
VMULPD	0x600(%RSP),%YMM1,%YMM10
VMULPD	%YMM14,%YMM1,%YMM1
VADDPD	%YMM11,%YMM7,%YMM12
VMOVUPD	0(%R12),%XMM7
VINSERTF128	$0x1,0x10(%R12),%YMM7,%YMM11
VADDPD	%YMM10,%YMM11,%YMM7
VMOVUPD	0(%R10,%RDI,8),%XMM11
VADDPD	0(%R15),%YMM1,%YMM10
VINSERTF128	$0x1,0x10(%R10,%RDI,8),%YMM11,%YMM11
VMULPD	%YMM11,%YMM13,%YMM1
VADDPD	%YMM1,%YMM6,%YMM1
VMULPD	0x680(%RSP),%YMM11,%YMM6
VADDPD	%YMM6,%YMM12,%YMM6
VMULPD	0x620(%RSP),%YMM11,%YMM12
VMULPD	0x640(%RSP),%YMM11,%YMM11
VADDPD	%YMM12,%YMM7,%YMM7
VADDPD	%YMM11,%YMM10,%YMM11
VMOVUPD	0(%RCX,%RDI,8),%XMM10
VINSERTF128	$0x1,0x10(%RCX,%RDI,8),%YMM10,%YMM12
VMULPD	%YMM12,%YMM9,%YMM10
VADDPD	%YMM10,%YMM1,%YMM10
VMULPD	%YMM8,%YMM12,%YMM1
VADDPD	%YMM1,%YMM6,%YMM1
VMULPD	0x6a0(%RSP),%YMM12,%YMM6
VADDPD	%YMM6,%YMM7,%YMM6
VMULPD	0x660(%RSP),%YMM12,%YMM7
VMOVUPD	0(%R8,%RDI,8),%XMM12
VADDPD	%YMM7,%YMM11,%YMM7
VINSERTF128	$0x1,0x10(%R8,%RDI,8),%YMM12,%YMM11
ADD	$0x4,%RDI
VMULPD	%YMM11,%YMM5,%YMM12
VADDPD	%YMM12,%YMM10,%YMM10
VMULPD	%YMM4,%YMM11,%YMM12
VADDPD	%YMM12,%YMM1,%YMM1
VMOVUPD	%XMM10,0(%R14)
VEXTRACTF128	$0x1,%YMM10,0x10(%R14)
VMULPD	%YMM3,%YMM11,%YMM10
VMULPD	%YMM2,%YMM11,%YMM11
VADDPD	%YMM10,%YMM6,%YMM6
VADDPD	%YMM11,%YMM7,%YMM7
ADD	$0x20,%R14
VMOVUPD	%XMM1,0(%R13)
VEXTRACTF128	$0x1,%YMM1,0x10(%R13)
ADD	$0x20,%R13
VMOVUPD	%XMM6,0(%R12)
VEXTRACTF128	$0x1,%YMM6,0x10(%R12)
VMOVUPD	%YMM7,0(%R15)
ADD	$0x20,%R12
ADD	$0x20,%R15
CMP	%R11,%RDI
JB	4077ab

*******************************************************
                General loop properties
*******************************************************
nb instructions		: 60
nb uops			: 70
loop length		: 340
used xmm registers	: 6
used ymm registers	: 16

Pattern: PD-XMM,PD-YMM
nb instructions:
PD-XMM	10
PD-YMM	33

nb FP arithmetical operations:
add-sub	64
mul	64

Ratio ADD-SUB/MUL (instructions): 1.00
Bytes loaded: 448
Bytes stored: 128
Arith. intensity (FLOP / ld+st bytes): 0.22

Unroll factor: 1

FIT IN UOP CACHE

*******************************************************
                       Dispatch
*******************************************************
	P0	P1	P2	P3	P4	P5
uops	16.00	16.00	14.00	14.00	7.00	14.00	
cycles	16.00	16.00	14.00	14.00	7.00	14.00	

*******************************************************
                 Vectorization ratios
*******************************************************
all	: 81%
load	: 66%
store	: 57%
mul	: 100%
add_sub	: 100%
other	: 0%

*******************************************************
                   If all data in L1
*******************************************************
cycles: 16.00
FP operations per cycle: 8.00 (GFLOPS at 1 GHz)
instructions per cycle: 3.75
bytes loaded per cycle: 28.00 (GB/s at 1 GHz)
bytes stored per cycle: 8.00 (GB/s at 1 GHz)
bytes loaded or stored per cycle: 36.00 (GB/s at 1 GHz)
Cycles if fully vectorized: 16.00
Cycles executing div or sqrt instructions: NA
*******************************************************
                          End
*******************************************************





